<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI">

    

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid>
            <Border Name="Border" BorderThickness="1,1,1,0">
            </Border>

            <ContentPresenter 
            Margin="12,3,12,3" 
            ContentSource="Header"
            RecognizesAccessKey="True" 
            TextBlock.Foreground="{DynamicResource ModernButtonText}"/>
            <Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsSubmenuOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="None">
                <StackPanel>
                    <DockPanel LastChildFill="True">
                        <Border BorderThickness="1,0,1,0" DockPanel.Dock="Left" BorderBrush="{DynamicResource WindowBorderActive}" Width="{Binding ElementName=Border, Path=ActualWidth}"  Background="{DynamicResource WindowBackground}">
                        </Border>
                        <Border BorderThickness="0,0,1,1" DockPanel.Dock="Left" BorderBrush="{DynamicResource WindowBorderActive}">
                        </Border>
                    </DockPanel>
                    <Border
              Name="SubmenuBorder"
              SnapsToDevicePixels="True"
              Background="{DynamicResource WindowBackground}"
              BorderBrush="{DynamicResource WindowBorderActive}"
              BorderThickness="1,0,1,1" >
                        <ScrollViewer CanContentScroll="True">
                            <StackPanel   
                IsItemsHost="True" 
                KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </StackPanel>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonBackgroundHover}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}"/>
            </Trigger>
            <DataTrigger Binding="{Binding ElementName=Popup, Path=IsOpen}" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource WindowBackground}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource WindowBorderActive}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- TopLevelItem -->

    <ControlTemplate 
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
  TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" 
        TextBlock.Foreground="{DynamicResource ModernButtonText}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonBackgroundHover}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->

    <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="{x:Type MenuItem}">
        <Grid>
            <Border Name="Border" Margin="3,0,3,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" MinWidth="30"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" MinWidth="30"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
            Name="Icon"
            Margin="6,0,6,0"
            VerticalAlignment="Center"
            ContentSource="Icon"/>
                    <Border 
            Name="Check"  
            Width="13" Height="13" 
            Visibility="Collapsed"
            Margin="6,0,6,0" 
            Background="{DynamicResource NormalBrush}"
            BorderThickness="1"
            BorderBrush="{DynamicResource NormalBorderBrush}">
                        <Path 
              Name="CheckMark"
              Width="7" Height="7" 
              Visibility="Hidden" 
              SnapsToDevicePixels="False" 
              Stroke="{DynamicResource GlyphBrush}"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter
            Margin="0,2,0,0"
            Name="HeaderHost"
            Grid.Column="1"
            ContentSource="Header"
            RecognizesAccessKey="True"
            TextBlock.Foreground="{DynamicResource ModernButtonText}"/>
                    <TextBlock x:Name="InputGestureText"
            Grid.Column="2"
            Text="{TemplateBinding InputGestureText}"
            Margin="10,2,2,2"
            DockPanel.Dock="Right" 
            TextBlock.Foreground="{DynamicResource ModernButtonText}"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonBackgroundHover}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}"/>
                <Setter TargetName="HeaderHost" Property="TextElement.Foreground" Value="{DynamicResource ModernButtonTextDisabled}"/>
                <Setter TargetName="InputGestureText" Property="TextElement.Foreground" Value="{DynamicResource ModernButtonTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->

    <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
  TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="3,0,3,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" MinWidth="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" MinWidth="30"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                <ContentPresenter 
        Margin="0,2,0,0"
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"
        TextBlock.Foreground="{DynamicResource ModernButtonText}"/>
                <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="10,2,2,2"
        DockPanel.Dock="Right"/>
                <Path 
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="{DynamicResource GlyphBrush}" />
                <Popup
        Name="Popup"
        Placement="Right"
        HorizontalOffset="3" 
                    VerticalOffset="-4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                    <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{DynamicResource WindowBackground}"
          BorderBrush="{DynamicResource WindowBorderActive}"
          BorderThickness="1" >
                        <ScrollViewer CanContentScroll="True">
                            <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectedBackgroundBrush}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>